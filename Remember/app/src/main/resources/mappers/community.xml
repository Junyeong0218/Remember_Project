<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.remember.app.entity.community.CommunityRepository">

	<select id="getCategoriesWithArticleCount" resultType="com.remember.app.entity.community.category.SubCategoryDetail">
		select
			sc.*,
			count(distinct am.id) as article_count
		from
			community_sub_category sc
			left outer join article_mst am on(am.sub_category_id = sc.id)
		group by
			sc.id;
	</select>
	
	<select id="getBestArticleSummaries" resultType="com.remember.app.entity.community.article.BestArticleSummary">
		select
			am.id,
			am.sub_category_id,
			category.category_name,
			am.title,
			am.view_count,
			count(distinct al.id) as like_count,
			count(distinct acm.id) as comment_count
		from
			article_mst am
			left outer join community_sub_category category on(category.id = am.sub_category_id)
			left outer join article_like al on(al.article_id = am.id)
			left outer join article_comment_mst acm on(acm.article_id = am.id)
		group by
			am.id
		order by
			like_count desc
		limit 14;
	</select>
	
	<select id="getBestArticleSummariesAboutCategory" parameterType="Integer" resultType="com.remember.app.entity.community.article.BestArticleSummary">
		select
			am.id,
			am.title,
			count(distinct al.id) as like_count,
		from
			article_mst am
			left outer join article_like al on(al.article_id = am.id)
		where
			am.sub_category_id = #{categoryId}
		group by
			am.id
		order by
			like_count desc
		limit 3;
	</select>
	
	<select id="getTotalArticleSummaries" resultType="com.remember.app.entity.community.article.ArticleSummary">
		select
			am.id,
			
			am.user_id,
			um.nickname,
			ud.department_name,
			ud.profile_img,
			
			am.sub_category_id,
			category.category_name,
			
			am.title,
			am.`contents`,
			image.file_name,
			am.create_date,
			am.view_count,
			count(distinct al.id) as like_count,
			count(distinct acm.id) as comment_count
		from
			article_mst am
			left outer join user_mst um ON(um.id = am.user_id)
			left outer join user_detail ud ON(ud.user_id = am.user_id)
			left outer join community_sub_category category ON(category.id = am.sub_category_id)
			left outer join article_image image ON(image.article_id = am.id)
			left outer join article_like al ON(al.article_id = am.id)
			left outer join article_comment_mst acm ON(acm.article_id = am.id)
		group by
			am.id
		order by
			am.create_date desc
		limit 0, 15;
	</select>
	
	<select id="getTopicArticleSummaries" parameterType="Integer" resultType="com.remember.app.entity.community.article.ArticleSummary">
		select
			am.id,
			
			am.user_id,
			um.nickname,
			ud.department_name,
			ud.profile_img,
			
			am.sub_category_id,
			category.category_name,
			
			am.title,
			am.`contents`,
			image.file_name,
			am.create_date,
			am.view_count,
			count(distinct al.id) as like_count,
			count(distinct acm.id) as comment_count
		from
			article_mst am
			left outer join user_mst um ON(um.id = am.user_id)
			left outer join user_detail ud ON(ud.user_id = am.user_id)
			left outer join community_sub_category category ON(category.id = am.sub_category_id)
			left outer join article_image image ON(image.article_id = am.id)
			left outer join article_like al ON(al.article_id = am.id)
			left outer join article_comment_mst acm ON(acm.article_id = am.id)
		where
			am.sub_category_id = #{categoryId}
		group by
			am.id
		order by
			am.create_date desc
		limit 0, 15;
	</select>
	
	<select id="getTotalArticleCount" resultType="Integer">
		select
			count(id)
		from
			article_mst;
	</select>
	
	<select id="getTopicArticleCount" parameterType="Integer" resultType="Integer">
		select
			count(id)
		from
			article_mst
		where
			sub_category_id = #{categoryId};
	</select>
	
	<select id="getArticleDetail" parameterType="Integer" resultType="com.remember.app.entity.community.article.ArticleDetail">
		select
			am.id,
			
			am.user_id,
			um.nickname,
			ud.department_name,
			ud.profile_img,
			
			am.sub_category_id,
			category.category_name,
			
			am.title,
			am.`contents`,
			
			image.file_name,
			
			am.view_count,
			count(distinct al.id) as like_count,
			count(distinct acm.id) as comment_count,
			
			am.create_date,
			
			acm.id as comment_id,
			acm.user_id as commented_user_id,
			um2.nickname as commented_user_nickname,
			ud2.department_name as commented_user_department_name,
			ud2.profile_img as commented_user_profile_img,
			acm.`contents` as comment_contents,
			acm.related_comment_id,
			acm.create_date as comment_create_date,
			count(distinct acl.id) as comment_like_count
		from 
			article_mst am
			left outer join user_mst um ON(um.id = am.user_id)
			left outer join user_detail ud ON(ud.user_id = am.user_id)
			left outer join community_sub_category category ON(category.id = am.sub_category_id)
			left outer join article_image image ON(image.article_id = am.id)
			left outer join article_like al ON(al.article_id = am.id)
			left outer join article_comment_mst acm ON(acm.article_id = am.id)
			left outer join user_mst um2 ON(um2.id = acm.user_id)
			left outer join user_detail ud2 ON(ud2.user_id = acm.user_id)
			left outer join article_comment_like acl ON(acl.comment_id = acm.id)
		where
			am.id = #{articleId}
		group by
			am.id,
			acm.id;
	</select>
	
	<select id="isUserJoinCategory" parameterType="com.remember.app.entity.community.category.CommunityJoinUser" resultType="Integer">
		select
			count(id)
		from
			community_join_user
		where
			sub_category_id = ${sub_category_id} and 
			user_id = ${user_id};
	</select>
	
	<select id="getCategoryName" parameterType="Integer" resultType="String">
		select
			category_name
		from
			community_sub_category
		where
			id = #{categoryId};
	</select>
	
	<insert id="joinCategory" parameterType="com.remember.app.entity.community.category.CommunityJoinUser">
		insert into
			community_join_user
		values(
			0,
			#{sub_category_id},
			#{user_id},
			now(),
			now()
		);
	</insert>
	
	<select id="getJoinedCategories" parameterType="Integer" resultType="com.remember.app.entity.community.category.JoinedCategory">
		select 
			category.id as main_category_id,
			category.category_kor_name,
			
			sub.id as sub_category_id,
			sub.category_name
		from 
			community_join_user `join`
			left outer join community_sub_category sub on(sub.id = `join`.sub_category_id)
			left outer join community_category_mst category on(category.id = sub.main_category_id)
		where
			`join`.user_id = #{id}
		order by
			main_category_id asc,
			sub_category_id asc;
	</select>
	
	<select id="getTagsAboutMainCategory" parameterType="Integer" resultType="com.remember.app.entity.community.article.Tag">
		select
			tag.id,
			tag.tag_name
		from
			article_tag_belong_category belong
			left outer join article_tag_mst tag on(tag.id = belong.article_tag_id)
		where
			belong.main_category_id = #{mainCategoryId};
	</select>

</mapper>