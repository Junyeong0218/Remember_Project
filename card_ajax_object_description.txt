ㅇ	isTeamJoined() - need principal.id = return boolean

ㅇ	loadUserGroups() - personal = return group_list
ㅇ	loadCardsInAllGroups(page) - personal = return card_list
ㅇ	loadCardsInSpecificGroup(group_id, page) - personal = return card_list
ㅇ	loadCardDetail(card_id) - both= return card_detail
ㅇ	loadPrincipalProfile() - team = return team_profile
ㅇ	loadTeams() - team = return team_list
ㅇ	loadCardBooks(selected_team_id) - team / not null = return card_book_list
ㅇ	loadTeamGroups(selected_card_book_id) - team / not null = return group_list
ㅇ	loadTeamCardsInCardBook(selected_card_book_id, page, card_order_flag) - team / not null = return card_list
ㅇ	loadTeamCardsInSpecificGroup(selected_group_id, page, card_order_flag) - team / not null = return card_list
ㅇ	loadTeamMembers(selected_team_id, page) - team / not null = return team_member_list
ㅇ	loadCardBookJoinMembers(selected_card_book_id, page) - team / not null = return card_book_member_list
ㅇ	loadTeamGroupBelongFlags(card_id) - team / not null = return group_belong_flag_list
ㅇ	loadTeamGroupBelongFlagsForCards(card_id_list) - team / not null = return group_belong_flag_list
ㅇ	loadCardEmails(card_id_list) - team / not null = return card_email_list
ㅇ	loadCardEmailsInGroup(team_group_id, not_selected_card_id_list) - team / not null = return card_email_list
ㅇ	loadCardEmailsInCardBook(team_card_book_id, not_selected_card_id_list) - team / not null = return card_email_list

ㅇ	insertNewGroup(group_name) - not null = return group_id
ㅇ	insertNewCard(data) - name not null = return card_id ( if failed return 0 )
ㅇ	insertCardMemo(card_id, contents) - both / not null = return boolean
ㅇ	insertNewTeam(data) - title, nickname, cardbookname not null = return boolean
ㅇ	insertTeamGroup(selected_card_book_id, group_name) - team / not null = return boolean
ㅇ	insertTeamCardToPersonal(team_card_id, memo_include_flag) - team / not null = return boolean
ㅇ	insertTeamCardsToPersonal(team_card_id_list, memo_include_flag) - team / not null = return boolean
ㅇ	insertAllTeamCardsInGroupToPersonal(team_group_id, not_selected_card_id_list, memo_include_flag) - team / not null = return boolean
ㅇ	insertAllTeamCardsInCardBookToPersonal(team_card_book_id, not_selected_card_id_list, memo_include_flag)  - team / not null = return boolean

ㅇ	updateGroupName(group_id, group_name) - not null = return boolean
ㅇ	updateCard(card_id, formdata) - both / name not null = return boolean
ㅇ	updateCardMemo(card_memo_id, contents) - both / not null = return boolean
ㅇ	updateCardsBelongGroups(card_id_list, group_id_list, default_card_group_id) - not null = return boolean
ㅇ	updateTeamName(team_id, title) - team / not null = return boolean
ㅇ	updateProfileNickname(team_profile_id, nickname) - team / not null = return boolean
ㅇ	updateCardBookName(selected_card_book_id, card_book_name) - team / not null = return boolean
ㅇ	updateTeamCardBelongTeamGroup(card_id, data) - team / not null = return boolean
ㅇ	updateTeamCardsBelongTeamGroup(data) - team / not null = return boolean

ㅇ	deleteGroup(group_id) - not null = return boolean
ㅇ	deleteCard(card_id) - both / not null = return boolean
ㅇ	deleteCards(card_id_list) - both / not null = return boolean
ㅇ	deleteCardMemo(card_memo_id) - both / not null = return boolean
ㅇ	deleteTeam(selected_team_id) - team / not null = return boolean
ㅇ	leaveTeam(selected_team_id) - team / nuo null = return boolean
ㅇ	deleteAllCardsInTeamGroup(selected_group_id, not_selected_card_id_list) - team / id not null = return boolean
ㅇ	deleteAllCardsInCardBook(selected_card_book_id, not_selected_card_id_list) - team / id not null = return boolean
