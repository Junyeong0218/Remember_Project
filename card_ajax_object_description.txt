	isTeamJoined() - need principal.id = return boolean

	loadUserGroups() - personal = return group_list
	loadCardsInAllGroups(page) - personal = return card_list
	loadCardsInSpecificGroup(group_id, page) - personal = return card_list
	loadCardDetail(card_id) - both= return card_detail
	loadPrincipalProfile() - team = return team_profile
	loadTeams() - team = return team_list
	loadCardBooks(selected_team_id) - team / not null = return card_book_list
	loadTeamGroups(selected_card_book_id) - team / not null = return group_list
	loadTeamCardsInCardBook(page, card_order_flag) - team / not null = return card_list
	loadTeamCardsInSpecificGroup(selected_group_id, page, card_order_flag) - team / not null = return card_list
	loadTeamMembers(selected_team_id, page) - team / not null = return team_member_list
	loadCardBookJoinMembers(selected_card_book_id, page) - team / not null = return card_book_member_list
	loadTeamGroupBelongFlags(card_id) - team / not null = return group_belong_flag_list
	loadTeamGroupBelongFlagsForCards(card_id_list) - team / not null = return group_belong_flag_list
	loadCardEmails(card_id_list) - team / not null = return card_email_list
	loadCardEmailsInGroup(team_group_id, not_selected_card_id_list) - team / not null = return card_email_list
	loadCardEmailsInCardBook(team_card_book_id, not_selected_card_id_list) - team / not null = return card_email_list
	
	insertNewGroup(group_name) - not null = return group_id
	insertNewCard(data) - name not null = return card_id ( if failed return 0 )
	insertCardMemo(card_id, contents) - both / not null = return boolean
	insertNewTeam(data) - title, nickname, cardbookname not null = return boolean
	insertTeamGroup(selected_card_book_id, group_name) - team / not null = return boolean
	insertTeamCardToPersonal(team_card_id, memo_include_flag) - team / not null = return boolean
	insertTeamCardsToPersonal(team_card_id_list, memo_include_flag) - team / not null = return boolean
	insertAllTeamCardsInGroupToPersonal(team_group_id, not_selected_card_id_list, memo_include_flag) - team / not null = return boolean
	insertAllTeamCardsInCardBookToPersonal(team_card_book_id, not_selected_card_id_list, memo_include_flag)  - team / not null = return boolean

	updateGroupName(group_id, group_name) - not null = return boolean
	updateCard(card_id, formdata) - both / name not null = return boolean
	updateCardMemo(card_memo_id, contents) - both / not null = return boolean
	updateCardsBelongGroups(card_id_list, group_id_list, default_card_group_id) - not null = return boolean
	updateTeamName(team_id, title) - team / not null = return boolean
	updateProfileNickname(team_profile_id, nickname) - team / not null = return boolean
	updateCardBookName(selected_card_book_id, card_book_name) - team / not null = return boolean
	updateTeamCardBelongTeamGroup(card_id, data) - team / not null = return boolean
	updateTeamCardsBelongTeamGroup(data) - team / not null = return boolean

	deleteGroup(group_id) - not null = return boolean
	deleteCard(card_id) - both / not null = return boolean
	deleteCards(card_id_list) - not null = return boolean
	deleteCardMemo(card_memo_id) - both / not null = return boolean
	deleteTeam(selected_team_id) - team / not null = return boolean
	leaveTeam(selected_team_id) - team / nuo null = return boolean
	deleteAllCardsInTeamGroup(selected_group_id, not_selected_card_id_list) - team / id not null = return boolean
	deleteAllCardsInCardBook(selected_card_book_id, not_selected_card_id_list) - team / id not null = return boolean
